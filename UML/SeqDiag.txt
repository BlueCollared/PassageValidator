@startuml
actor Passenger
participant MMI
participant GateMgr
box "Ticketing Terminal (TT)"
  participant TT
  participant "Health Check Sub-Entity" as HealthCheck
end box
participant "Validation Service \nBroker" as ValidationServiceBroker


GateMgr -> TT : EnableDetection (Enable/Disable)
activate TT


Passenger --> TT : Produce QR
TT -> ValidationServiceBroker : Validate(QR)
activate ValidationServiceBroker
ValidationServiceBroker->ValidationService
ValidationServiceBroker<--ValidationService : AuthorizePassage | RejectPassage \n + QR Data
ValidationServiceBroker --> TT : AuthorizePassage | RejectPassage \n + QR Data
deactivate ValidationServiceBroker

TT --> GateMgr : AuthorizePassage | RejectPassage \n + QR Data
GateMgr -> GateMgr: Offer Passage\non AuthorizePassage
GateMgr -> MMI: Notify

par Periodic Health Check    
    TT -> HealthCheck : Start Health Monitor
    loop Periodic Check
        HealthCheck -> ValidationService : CheckHealth()
        activate ValidationService
        ValidationService --> HealthCheck : Good | Bad
        deactivate ValidationService

        alt Health status changes
            HealthCheck --> TT : NotifyStatusChange(Good | Bad)
            TT --> GateMgr : NotifyStatusChange(Good | Bad)
        end
    end
end

deactivate TT
@enduml